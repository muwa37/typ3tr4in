{"version":3,"file":"99.669c8f1e759d30e1851c.js","mappings":"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","sources":["webpack://typ3tr4in/./src/components/ui/CustomButton.tsx","webpack://typ3tr4in/./src/components/ui/CustomLi.tsx","webpack://typ3tr4in/./src/components/ui/PageTitle.tsx","webpack://typ3tr4in/./src/pages/Stat.tsx","webpack://typ3tr4in/./src/store/stat/selectors.ts","webpack://typ3tr4in/./src/utils/helpers.ts"],"sourcesContent":["type CustomButtonProps = {\n  onClickFn: () => void;\n  buttonText: string;\n  isActive?: boolean;\n};\n\nconst CustomButton = ({\n  onClickFn,\n  buttonText,\n  isActive,\n}: CustomButtonProps) => {\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    onClickFn();\n    e.currentTarget.blur();\n  };\n\n  return (\n    <button\n      className={`m-3 p-3 border-2 rounded-md   hover:border-blue-300 hover:text-blue-300 flex items-center justify-center italic ${\n        isActive\n          ? 'border-lime-700 text-lime-700'\n          : 'border-red-300 text-red-300'\n      }`}\n      onClick={handleClick}\n    >\n      {buttonText}\n    </button>\n  );\n};\n\nexport default CustomButton;\n","type CustomLiProps = { liTitle: string; liText?: string };\n\nconst CustomLi = ({ liTitle, liText }: CustomLiProps) => {\n  return (\n    <li className='text-xl flex'>\n      <h3 className='font-bold underline'>\n        {liTitle}\n        {liText && ':'}\n      </h3>\n      {liText && (\n        <p className='italic pl-2 underline decoration-wavy'> {liText}</p>\n      )}\n    </li>\n  );\n};\n\nexport default CustomLi;\n","type PageTitleProps = { pageTitle: string };\n\nconst PageTitle = ({ pageTitle }: PageTitleProps) => {\n  return (\n    <h1 className='mt-4 text-3xl md:text-6xl font-extrabold'>{pageTitle}</h1>\n  );\n};\n\nexport default PageTitle;\n","import CustomButton from '@/components/ui/CustomButton';\nimport CustomLi from '@/components/ui/CustomLi';\nimport PageTitle from '@/components/ui/PageTitle';\nimport { selectStats } from '@/store/stat/selectors';\nimport { clearStats } from '@/store/stat/slice';\nimport { formatPercentage } from '@/utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Stat = () => {\n  const dispatch = useDispatch();\n  const stat = useSelector(selectStats);\n\n  const onClearClick = () => {\n    dispatch(clearStats());\n  };\n\n  return (\n    <section className='flex flex-col w-full h-full items-center justify-evenly px-4'>\n      <PageTitle pageTitle='Statistics' />\n\n      <div className='flex flex-col lg:flex-row w-full h-full items-center justify-evenly lg:space-x-4 space-y-8 lg:space-y-0'>\n        <div className='w-full lg:h-1/3 lg:w-1/3 text-violet-300'>\n          <h2 className='text-xl lg:text-2xl font-bold mb-3 text-center'>\n            Last attempt stats\n          </h2>\n          <ul className='space-y-2'>\n            <CustomLi\n              liTitle='WPM'\n              liText={stat.lastAttemptStats.WPM.toString()}\n            />\n            <CustomLi\n              liTitle='Accuracy'\n              liText={formatPercentage(stat.lastAttemptStats.accuracy)}\n            />\n          </ul>\n        </div>\n\n        <div className='w-full lg:h-1/3 lg:w-1/3 text-fuchsia-300'>\n          <h2 className='text-xl lg:text-2xl font-bold mb-3 text-center'>\n            Summary WPM stats\n          </h2>\n          <ul className='space-y-2'>\n            <CustomLi liTitle='Best WPM' liText={stat.bestWPM.toString()} />\n            <CustomLi liTitle='Average WPM' liText={stat.avgWPM.toString()} />\n            <CustomLi liTitle='Worst WPM' liText={stat.worstWPM.toString()} />\n          </ul>\n        </div>\n\n        <div className='w-full lg:h-1/3 lg:w-1/3 text-pink-300'>\n          <h2 className='text-xl lg:text-2xl font-bold mb-3 text-center'>\n            Summary Accuracy stats\n          </h2>\n          <ul className='space-y-2'>\n            <CustomLi\n              liTitle='Best Accuracy'\n              liText={formatPercentage(stat.bestAccuracy)}\n            />\n            <CustomLi\n              liTitle='Average Accuracy'\n              liText={formatPercentage(stat.avgAccuracy)}\n            />\n            <CustomLi\n              liTitle='Worst Accuracy'\n              liText={formatPercentage(stat.worstAccuracy)}\n            />\n          </ul>\n        </div>\n      </div>\n\n      <div className='w-full flex justify-center mt-8'>\n        <CustomButton onClickFn={onClearClick} buttonText='Clear Stats' />\n      </div>\n    </section>\n  );\n};\n\nexport default Stat;\n","import { RootState } from '..';\n\nexport const selectLastAttemptStats = (state: RootState) =>\n  state.stat.lastAttemptStats;\nexport const selectStats = (state: RootState) => state.stat;\n","import { TimeMode } from '@/types/common';\n\nexport const isKeyboardCodeAllowed = (code: string) => {\n  return (\n    code.startsWith('Key') ||\n    code.startsWith('Digit') ||\n    code === 'Backspace' ||\n    code === 'Space' ||\n    code === 'Comma' ||\n    code === 'Period' ||\n    code === 'Quote'\n  );\n};\n\nexport const countErrors = (actual: string, expected: string) => {\n  const expectedCharacters = expected.split('');\n\n  return expectedCharacters.reduce((errors, expectedChar, i) => {\n    const actualChar = actual[i];\n    if (actualChar !== expectedChar) {\n      errors++;\n    }\n    return errors;\n  }, 0);\n};\n\nexport const calculateAccuracy = (errors: number, total: number) => {\n  if (total > 0) {\n    const corrects = total - errors;\n    return (corrects / total) * 100;\n  }\n\n  return 0;\n};\n\nexport const formatPercentage = (percentage: number) => {\n  return percentage.toFixed(0) + '%';\n};\n\nexport const calculateWPM = (time: TimeMode, total: number) => {\n  if (total > 0) {\n    if (time === 15) {\n      return total * 4;\n    }\n    if (time === 30) {\n      return total * 2;\n    }\n    if (time === 60) {\n      return total;\n    }\n    if (time === 120) {\n      return total * 0.5;\n    }\n  }\n\n  return 0;\n};\n"],"names":["_ref","onClickFn","buttonText","isActive","React","createElement","className","concat","onClick","e","currentTarget","blur","liTitle","liText","pageTitle","dispatch","useDispatch","stat","useSelector","selectStats","PageTitle","CustomLi","lastAttemptStats","WPM","toString","formatPercentage","accuracy","bestWPM","avgWPM","worstWPM","bestAccuracy","avgAccuracy","worstAccuracy","CustomButton","clearStats","selectLastAttemptStats","state","isKeyboardCodeAllowed","code","startsWith","countErrors","actual","expected","split","reduce","errors","expectedChar","i","calculateAccuracy","total","percentage","toFixed","calculateWPM","time"],"sourceRoot":""}